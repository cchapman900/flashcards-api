openapi: "3.0.0"
info:
  version: 1.0.0
  title: Flashcards API
  description: An API that allows user to do quick math operations and track progress
  contact:
    name: Chris Chapman
    email: chrischapman900@gmail.com
    url: http://chrischapman.co
paths:
  /words:
    get:
      summary: List words
      description: List all word, with optional search by part of speech
      operationId: listWords
      tags:
        - Words
      parameters:
        - name: partOfSpeech
          in: query
          description: What type of partOfSpeech to return
          required: false
          schema:
            type: string
        - name: limit
          in: query
          description: How many items to return at one time (max 100)
          required: false
          schema:
            type: integer
      responses:
        '200':
          description: A paged array of Words
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Word"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /words/{word_id}:
    parameters:
      - name: word_id
        in: path
        required: true
        description: The id of the word
        schema:
          type: integer
    get:
      summary: Get word
      operationId: getWord
      tags:
        - Words
      responses:
        '200':
          description: The requested Word
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Word"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

components:
  schemas:

    Word:
      required:
        - id
        - hebrew
        - english
        - count
        - partOfSpeech
      properties:
        id:
          type: integer
          format: int64
        hebrew:
          type: string
          example: נתן
        english:
          type: string
          example: to give, put, set
        count:
          type: integer
          example: 2140
        partOfSpeech:
          type: string
          example: verb

    User:
      required:
        - id
        - name
      properties:
        id:
          type: integer
          format: int64
        hebrew:
          type: string
          example: נתן
        english:
          type: string
          example: to give, put, set
        count:
          type: integer
          example: 2140
        partOfSpeech:
          type: string
          example: verb

    WordConfidence:
      required:
        - word
        - mode
        - overallResults
      properties:
        word:
          $ref: "#/components/schemas/Word"
        user:
          $ref: "#/components/schemas/User"
        mode:
          properties:
            direction:
              type: string
              example: hebrewToEnglish
              enum:
                - hebrewToEnglish
                - englishToHebrew
            value:
              description: On a scale from 1-5 on how confident about a word
              type: integer
              example: 4

    Error:
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string